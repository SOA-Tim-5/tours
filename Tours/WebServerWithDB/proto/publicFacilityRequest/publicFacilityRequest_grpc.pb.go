// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.0--rc2
// source: publicFacilityRequest/publicFacilityRequest.proto

package publicFacilityRequest

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PublicFacilityRequestServiceClient is the client API for PublicFacilityRequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PublicFacilityRequestServiceClient interface {
	Create(ctx context.Context, in *PublicFacilityRequestCreateDto, opts ...grpc.CallOption) (*PublicFacilityRequestResponseDto, error)
}

type publicFacilityRequestServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPublicFacilityRequestServiceClient(cc grpc.ClientConnInterface) PublicFacilityRequestServiceClient {
	return &publicFacilityRequestServiceClient{cc}
}

func (c *publicFacilityRequestServiceClient) Create(ctx context.Context, in *PublicFacilityRequestCreateDto, opts ...grpc.CallOption) (*PublicFacilityRequestResponseDto, error) {
	out := new(PublicFacilityRequestResponseDto)
	err := c.cc.Invoke(ctx, "/PublicFacilityRequestService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicFacilityRequestServiceServer is the server API for PublicFacilityRequestService service.
// All implementations must embed UnimplementedPublicFacilityRequestServiceServer
// for forward compatibility
type PublicFacilityRequestServiceServer interface {
	Create(context.Context, *PublicFacilityRequestCreateDto) (*PublicFacilityRequestResponseDto, error)
	mustEmbedUnimplementedPublicFacilityRequestServiceServer()
}

// UnimplementedPublicFacilityRequestServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPublicFacilityRequestServiceServer struct {
}

func (UnimplementedPublicFacilityRequestServiceServer) Create(context.Context, *PublicFacilityRequestCreateDto) (*PublicFacilityRequestResponseDto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedPublicFacilityRequestServiceServer) mustEmbedUnimplementedPublicFacilityRequestServiceServer() {
}

// UnsafePublicFacilityRequestServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PublicFacilityRequestServiceServer will
// result in compilation errors.
type UnsafePublicFacilityRequestServiceServer interface {
	mustEmbedUnimplementedPublicFacilityRequestServiceServer()
}

func RegisterPublicFacilityRequestServiceServer(s grpc.ServiceRegistrar, srv PublicFacilityRequestServiceServer) {
	s.RegisterService(&PublicFacilityRequestService_ServiceDesc, srv)
}

func _PublicFacilityRequestService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicFacilityRequestCreateDto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicFacilityRequestServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PublicFacilityRequestService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicFacilityRequestServiceServer).Create(ctx, req.(*PublicFacilityRequestCreateDto))
	}
	return interceptor(ctx, in, info, handler)
}

// PublicFacilityRequestService_ServiceDesc is the grpc.ServiceDesc for PublicFacilityRequestService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PublicFacilityRequestService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "PublicFacilityRequestService",
	HandlerType: (*PublicFacilityRequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PublicFacilityRequestService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "publicFacilityRequest/publicFacilityRequest.proto",
}
