// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: tour/tour.proto

package tour

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TourCreateDto_TourStatus int32

const (
	TourCreateDto_Draft     TourCreateDto_TourStatus = 0
	TourCreateDto_Published TourCreateDto_TourStatus = 1
	TourCreateDto_Archived  TourCreateDto_TourStatus = 2
	TourCreateDto_Ready     TourCreateDto_TourStatus = 3
)

// Enum value maps for TourCreateDto_TourStatus.
var (
	TourCreateDto_TourStatus_name = map[int32]string{
		0: "Draft",
		1: "Published",
		2: "Archived",
		3: "Ready",
	}
	TourCreateDto_TourStatus_value = map[string]int32{
		"Draft":     0,
		"Published": 1,
		"Archived":  2,
		"Ready":     3,
	}
)

func (x TourCreateDto_TourStatus) Enum() *TourCreateDto_TourStatus {
	p := new(TourCreateDto_TourStatus)
	*p = x
	return p
}

func (x TourCreateDto_TourStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourCreateDto_TourStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_tour_proto_enumTypes[0].Descriptor()
}

func (TourCreateDto_TourStatus) Type() protoreflect.EnumType {
	return &file_tour_tour_proto_enumTypes[0]
}

func (x TourCreateDto_TourStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourCreateDto_TourStatus.Descriptor instead.
func (TourCreateDto_TourStatus) EnumDescriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{0, 0}
}

type TourCreateDto_TourCategory int32

const (
	TourCreateDto_Adventure   TourCreateDto_TourCategory = 0
	TourCreateDto_FamilyTrips TourCreateDto_TourCategory = 1
	TourCreateDto_Cruise      TourCreateDto_TourCategory = 2
	TourCreateDto_Cultural    TourCreateDto_TourCategory = 3
)

// Enum value maps for TourCreateDto_TourCategory.
var (
	TourCreateDto_TourCategory_name = map[int32]string{
		0: "Adventure",
		1: "FamilyTrips",
		2: "Cruise",
		3: "Cultural",
	}
	TourCreateDto_TourCategory_value = map[string]int32{
		"Adventure":   0,
		"FamilyTrips": 1,
		"Cruise":      2,
		"Cultural":    3,
	}
)

func (x TourCreateDto_TourCategory) Enum() *TourCreateDto_TourCategory {
	p := new(TourCreateDto_TourCategory)
	*p = x
	return p
}

func (x TourCreateDto_TourCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourCreateDto_TourCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_tour_proto_enumTypes[1].Descriptor()
}

func (TourCreateDto_TourCategory) Type() protoreflect.EnumType {
	return &file_tour_tour_proto_enumTypes[1]
}

func (x TourCreateDto_TourCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourCreateDto_TourCategory.Descriptor instead.
func (TourCreateDto_TourCategory) EnumDescriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{0, 1}
}

type TourDurationResponseDto_TransportTypeE int32

const (
	TourDurationResponseDto_Walking TourDurationResponseDto_TransportTypeE = 0
	TourDurationResponseDto_Bicycle TourDurationResponseDto_TransportTypeE = 1
	TourDurationResponseDto_Car     TourDurationResponseDto_TransportTypeE = 2
)

// Enum value maps for TourDurationResponseDto_TransportTypeE.
var (
	TourDurationResponseDto_TransportTypeE_name = map[int32]string{
		0: "Walking",
		1: "Bicycle",
		2: "Car",
	}
	TourDurationResponseDto_TransportTypeE_value = map[string]int32{
		"Walking": 0,
		"Bicycle": 1,
		"Car":     2,
	}
)

func (x TourDurationResponseDto_TransportTypeE) Enum() *TourDurationResponseDto_TransportTypeE {
	p := new(TourDurationResponseDto_TransportTypeE)
	*p = x
	return p
}

func (x TourDurationResponseDto_TransportTypeE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourDurationResponseDto_TransportTypeE) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_tour_proto_enumTypes[2].Descriptor()
}

func (TourDurationResponseDto_TransportTypeE) Type() protoreflect.EnumType {
	return &file_tour_tour_proto_enumTypes[2]
}

func (x TourDurationResponseDto_TransportTypeE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourDurationResponseDto_TransportTypeE.Descriptor instead.
func (TourDurationResponseDto_TransportTypeE) EnumDescriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{3, 0}
}

type TourResponseDto_TourStatus int32

const (
	TourResponseDto_Draft     TourResponseDto_TourStatus = 0
	TourResponseDto_Published TourResponseDto_TourStatus = 1
	TourResponseDto_Archived  TourResponseDto_TourStatus = 2
	TourResponseDto_Ready     TourResponseDto_TourStatus = 3
)

// Enum value maps for TourResponseDto_TourStatus.
var (
	TourResponseDto_TourStatus_name = map[int32]string{
		0: "Draft",
		1: "Published",
		2: "Archived",
		3: "Ready",
	}
	TourResponseDto_TourStatus_value = map[string]int32{
		"Draft":     0,
		"Published": 1,
		"Archived":  2,
		"Ready":     3,
	}
)

func (x TourResponseDto_TourStatus) Enum() *TourResponseDto_TourStatus {
	p := new(TourResponseDto_TourStatus)
	*p = x
	return p
}

func (x TourResponseDto_TourStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourResponseDto_TourStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_tour_proto_enumTypes[3].Descriptor()
}

func (TourResponseDto_TourStatus) Type() protoreflect.EnumType {
	return &file_tour_tour_proto_enumTypes[3]
}

func (x TourResponseDto_TourStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourResponseDto_TourStatus.Descriptor instead.
func (TourResponseDto_TourStatus) EnumDescriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{4, 0}
}

type TourResponseDto_TourCategory int32

const (
	TourResponseDto_Adventure   TourResponseDto_TourCategory = 0
	TourResponseDto_FamilyTrips TourResponseDto_TourCategory = 1
	TourResponseDto_Cruise      TourResponseDto_TourCategory = 2
	TourResponseDto_Cultural    TourResponseDto_TourCategory = 3
)

// Enum value maps for TourResponseDto_TourCategory.
var (
	TourResponseDto_TourCategory_name = map[int32]string{
		0: "Adventure",
		1: "FamilyTrips",
		2: "Cruise",
		3: "Cultural",
	}
	TourResponseDto_TourCategory_value = map[string]int32{
		"Adventure":   0,
		"FamilyTrips": 1,
		"Cruise":      2,
		"Cultural":    3,
	}
)

func (x TourResponseDto_TourCategory) Enum() *TourResponseDto_TourCategory {
	p := new(TourResponseDto_TourCategory)
	*p = x
	return p
}

func (x TourResponseDto_TourCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourResponseDto_TourCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_tour_proto_enumTypes[4].Descriptor()
}

func (TourResponseDto_TourCategory) Type() protoreflect.EnumType {
	return &file_tour_tour_proto_enumTypes[4]
}

func (x TourResponseDto_TourCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourResponseDto_TourCategory.Descriptor instead.
func (TourResponseDto_TourCategory) EnumDescriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{4, 1}
}

type TourCreateDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId    int64                      `protobuf:"varint,1,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Name        string                     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string                     `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Difficulty  int32                      `protobuf:"varint,4,opt,name=Difficulty,proto3" json:"Difficulty,omitempty"`
	Tags        []string                   `protobuf:"bytes,5,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Status      TourCreateDto_TourStatus   `protobuf:"varint,6,opt,name=Status,proto3,enum=TourCreateDto_TourStatus" json:"Status,omitempty"`
	Price       float64                    `protobuf:"fixed64,7,opt,name=Price,proto3" json:"Price,omitempty"`
	IsDeleted   bool                       `protobuf:"varint,8,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
	Distance    float64                    `protobuf:"fixed64,9,opt,name=Distance,proto3" json:"Distance,omitempty"`
	Category    TourCreateDto_TourCategory `protobuf:"varint,10,opt,name=Category,proto3,enum=TourCreateDto_TourCategory" json:"Category,omitempty"`
}

func (x *TourCreateDto) Reset() {
	*x = TourCreateDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourCreateDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourCreateDto) ProtoMessage() {}

func (x *TourCreateDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourCreateDto.ProtoReflect.Descriptor instead.
func (*TourCreateDto) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{0}
}

func (x *TourCreateDto) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourCreateDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourCreateDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourCreateDto) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *TourCreateDto) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourCreateDto) GetStatus() TourCreateDto_TourStatus {
	if x != nil {
		return x.Status
	}
	return TourCreateDto_Draft
}

func (x *TourCreateDto) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourCreateDto) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TourCreateDto) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TourCreateDto) GetCategory() TourCreateDto_TourCategory {
	if x != nil {
		return x.Category
	}
	return TourCreateDto_Adventure
}

type KeyPointSecretDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images      []string `protobuf:"bytes,1,rep,name=Images,proto3" json:"Images,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *KeyPointSecretDto) Reset() {
	*x = KeyPointSecretDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointSecretDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointSecretDto) ProtoMessage() {}

func (x *KeyPointSecretDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointSecretDto.ProtoReflect.Descriptor instead.
func (*KeyPointSecretDto) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{1}
}

func (x *KeyPointSecretDto) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *KeyPointSecretDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type KeyPointResponseDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64              `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TourId          int64              `protobuf:"varint,2,opt,name=TourId,proto3" json:"TourId,omitempty"`
	Name            string             `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description     string             `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Longitude       float64            `protobuf:"fixed64,5,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Latitude        float64            `protobuf:"fixed64,6,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	LocationAddress string             `protobuf:"bytes,7,opt,name=LocationAddress,proto3" json:"LocationAddress,omitempty"`
	ImagePath       string             `protobuf:"bytes,8,opt,name=ImagePath,proto3" json:"ImagePath,omitempty"`
	Order           int64              `protobuf:"varint,9,opt,name=Order,proto3" json:"Order,omitempty"`
	HaveSecret      *bool              `protobuf:"varint,10,opt,name=HaveSecret,proto3,oneof" json:"HaveSecret,omitempty"`
	Secret          *KeyPointSecretDto `protobuf:"bytes,11,opt,name=Secret,proto3,oneof" json:"Secret,omitempty"`
}

func (x *KeyPointResponseDto) Reset() {
	*x = KeyPointResponseDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointResponseDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointResponseDto) ProtoMessage() {}

func (x *KeyPointResponseDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointResponseDto.ProtoReflect.Descriptor instead.
func (*KeyPointResponseDto) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{2}
}

func (x *KeyPointResponseDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KeyPointResponseDto) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *KeyPointResponseDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyPointResponseDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KeyPointResponseDto) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *KeyPointResponseDto) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *KeyPointResponseDto) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *KeyPointResponseDto) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *KeyPointResponseDto) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *KeyPointResponseDto) GetHaveSecret() bool {
	if x != nil && x.HaveSecret != nil {
		return *x.HaveSecret
	}
	return false
}

func (x *KeyPointResponseDto) GetSecret() *KeyPointSecretDto {
	if x != nil {
		return x.Secret
	}
	return nil
}

type TourDurationResponseDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration      int32                                  `protobuf:"varint,1,opt,name=Duration,proto3" json:"Duration,omitempty"`
	TransportType TourDurationResponseDto_TransportTypeE `protobuf:"varint,2,opt,name=TransportType,proto3,enum=TourDurationResponseDto_TransportTypeE" json:"TransportType,omitempty"`
}

func (x *TourDurationResponseDto) Reset() {
	*x = TourDurationResponseDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourDurationResponseDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourDurationResponseDto) ProtoMessage() {}

func (x *TourDurationResponseDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourDurationResponseDto.ProtoReflect.Descriptor instead.
func (*TourDurationResponseDto) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{3}
}

func (x *TourDurationResponseDto) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TourDurationResponseDto) GetTransportType() TourDurationResponseDto_TransportTypeE {
	if x != nil {
		return x.TransportType
	}
	return TourDurationResponseDto_Walking
}

type TourResponseDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                        `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AuthorId      *int64                       `protobuf:"varint,2,opt,name=AuthorId,proto3,oneof" json:"AuthorId,omitempty"`
	Name          string                       `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description   string                       `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Difficulty    int32                        `protobuf:"varint,5,opt,name=Difficulty,proto3" json:"Difficulty,omitempty"`
	Tags          []string                     `protobuf:"bytes,6,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Status        TourResponseDto_TourStatus   `protobuf:"varint,7,opt,name=Status,proto3,enum=TourResponseDto_TourStatus" json:"Status,omitempty"`
	Price         float64                      `protobuf:"fixed64,8,opt,name=Price,proto3" json:"Price,omitempty"`
	IsDeleted     bool                         `protobuf:"varint,9,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
	Distance      float64                      `protobuf:"fixed64,10,opt,name=Distance,proto3" json:"Distance,omitempty"`
	AverageRating *float64                     `protobuf:"fixed64,11,opt,name=AverageRating,proto3,oneof" json:"AverageRating,omitempty"`
	KeyPoints     []*KeyPointResponseDto       `protobuf:"bytes,12,rep,name=KeyPoints,proto3" json:"KeyPoints,omitempty"`
	Durations     []*TourDurationResponseDto   `protobuf:"bytes,13,rep,name=Durations,proto3" json:"Durations,omitempty"`
	PublishDate   int64                        `protobuf:"varint,14,opt,name=PublishDate,proto3" json:"PublishDate,omitempty"`
	ArchiveDate   int64                        `protobuf:"varint,15,opt,name=ArchiveDate,proto3" json:"ArchiveDate,omitempty"`
	Category      TourResponseDto_TourCategory `protobuf:"varint,16,opt,name=Category,proto3,enum=TourResponseDto_TourCategory" json:"Category,omitempty"`
}

func (x *TourResponseDto) Reset() {
	*x = TourResponseDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponseDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponseDto) ProtoMessage() {}

func (x *TourResponseDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponseDto.ProtoReflect.Descriptor instead.
func (*TourResponseDto) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{4}
}

func (x *TourResponseDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourResponseDto) GetAuthorId() int64 {
	if x != nil && x.AuthorId != nil {
		return *x.AuthorId
	}
	return 0
}

func (x *TourResponseDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourResponseDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourResponseDto) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *TourResponseDto) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourResponseDto) GetStatus() TourResponseDto_TourStatus {
	if x != nil {
		return x.Status
	}
	return TourResponseDto_Draft
}

func (x *TourResponseDto) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourResponseDto) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TourResponseDto) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TourResponseDto) GetAverageRating() float64 {
	if x != nil && x.AverageRating != nil {
		return *x.AverageRating
	}
	return 0
}

func (x *TourResponseDto) GetKeyPoints() []*KeyPointResponseDto {
	if x != nil {
		return x.KeyPoints
	}
	return nil
}

func (x *TourResponseDto) GetDurations() []*TourDurationResponseDto {
	if x != nil {
		return x.Durations
	}
	return nil
}

func (x *TourResponseDto) GetPublishDate() int64 {
	if x != nil {
		return x.PublishDate
	}
	return 0
}

func (x *TourResponseDto) GetArchiveDate() int64 {
	if x != nil {
		return x.ArchiveDate
	}
	return 0
}

func (x *TourResponseDto) GetCategory() TourResponseDto_TourCategory {
	if x != nil {
		return x.Category
	}
	return TourResponseDto_Adventure
}

type TourListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourResponses []*TourResponseDto `protobuf:"bytes,1,rep,name=tourResponses,proto3" json:"tourResponses,omitempty"`
}

func (x *TourListResponse) Reset() {
	*x = TourListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourListResponse) ProtoMessage() {}

func (x *TourListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourListResponse.ProtoReflect.Descriptor instead.
func (*TourListResponse) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{5}
}

func (x *TourListResponse) GetTourResponses() []*TourResponseDto {
	if x != nil {
		return x.TourResponses
	}
	return nil
}

type GetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetParams) Reset() {
	*x = GetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_tour_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParams) ProtoMessage() {}

func (x *GetParams) ProtoReflect() protoreflect.Message {
	mi := &file_tour_tour_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParams.ProtoReflect.Descriptor instead.
func (*GetParams) Descriptor() ([]byte, []int) {
	return file_tour_tour_proto_rawDescGZIP(), []int{6}
}

func (x *GetParams) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_tour_tour_proto protoreflect.FileDescriptor

var file_tour_tour_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdc, 0x03, 0x0a, 0x0d, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x54, 0x6f, 0x75, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x08,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x10, 0x03, 0x22, 0x48, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x54,
	0x72, 0x69, 0x70, 0x73, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x10, 0x03,
	0x22, 0x4d, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x44, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xfb, 0x02, 0x0a, 0x13, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x75, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0a, 0x48, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x0a, 0x48, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x48, 0x01, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x48, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xb9, 0x01,
	0x0a, 0x17, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x6c, 0x6b, 0x69, 0x6e,
	0x67, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x10, 0x02, 0x22, 0xf1, 0x05, 0x0a, 0x0f, 0x54, 0x6f,
	0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x0d, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0d, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4b, 0x65,
	0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74,
	0x6f, 0x52, 0x09, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x09,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x10, 0x03, 0x22, 0x48, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72,
	0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x54, 0x72, 0x69,
	0x70, 0x73, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x10, 0x03, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x4a, 0x0a,
	0x10, 0x54, 0x6f, 0x75, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x74, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x6f, 0x0a, 0x0b, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x1a,
	0x10, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x74,
	0x6f, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x11, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x74, 0x6f, 0x75, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tour_tour_proto_rawDescOnce sync.Once
	file_tour_tour_proto_rawDescData = file_tour_tour_proto_rawDesc
)

func file_tour_tour_proto_rawDescGZIP() []byte {
	file_tour_tour_proto_rawDescOnce.Do(func() {
		file_tour_tour_proto_rawDescData = protoimpl.X.CompressGZIP(file_tour_tour_proto_rawDescData)
	})
	return file_tour_tour_proto_rawDescData
}

var file_tour_tour_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_tour_tour_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tour_tour_proto_goTypes = []interface{}{
	(TourCreateDto_TourStatus)(0),               // 0: TourCreateDto.TourStatus
	(TourCreateDto_TourCategory)(0),             // 1: TourCreateDto.TourCategory
	(TourDurationResponseDto_TransportTypeE)(0), // 2: TourDurationResponseDto.TransportTypeE
	(TourResponseDto_TourStatus)(0),             // 3: TourResponseDto.TourStatus
	(TourResponseDto_TourCategory)(0),           // 4: TourResponseDto.TourCategory
	(*TourCreateDto)(nil),                       // 5: TourCreateDto
	(*KeyPointSecretDto)(nil),                   // 6: KeyPointSecretDto
	(*KeyPointResponseDto)(nil),                 // 7: KeyPointResponseDto
	(*TourDurationResponseDto)(nil),             // 8: TourDurationResponseDto
	(*TourResponseDto)(nil),                     // 9: TourResponseDto
	(*TourListResponse)(nil),                    // 10: TourListResponse
	(*GetParams)(nil),                           // 11: GetParams
}
var file_tour_tour_proto_depIdxs = []int32{
	0,  // 0: TourCreateDto.Status:type_name -> TourCreateDto.TourStatus
	1,  // 1: TourCreateDto.Category:type_name -> TourCreateDto.TourCategory
	6,  // 2: KeyPointResponseDto.Secret:type_name -> KeyPointSecretDto
	2,  // 3: TourDurationResponseDto.TransportType:type_name -> TourDurationResponseDto.TransportTypeE
	3,  // 4: TourResponseDto.Status:type_name -> TourResponseDto.TourStatus
	7,  // 5: TourResponseDto.KeyPoints:type_name -> KeyPointResponseDto
	8,  // 6: TourResponseDto.Durations:type_name -> TourDurationResponseDto
	4,  // 7: TourResponseDto.Category:type_name -> TourResponseDto.TourCategory
	9,  // 8: TourListResponse.tourResponses:type_name -> TourResponseDto
	5,  // 9: TourService.Create:input_type -> TourCreateDto
	11, // 10: TourService.GetAuthorsTours:input_type -> GetParams
	9,  // 11: TourService.Create:output_type -> TourResponseDto
	10, // 12: TourService.GetAuthorsTours:output_type -> TourListResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_tour_tour_proto_init() }
func file_tour_tour_proto_init() {
	if File_tour_tour_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tour_tour_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourCreateDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_tour_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointSecretDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_tour_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointResponseDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_tour_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourDurationResponseDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_tour_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponseDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_tour_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_tour_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tour_tour_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_tour_tour_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tour_tour_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tour_tour_proto_goTypes,
		DependencyIndexes: file_tour_tour_proto_depIdxs,
		EnumInfos:         file_tour_tour_proto_enumTypes,
		MessageInfos:      file_tour_tour_proto_msgTypes,
	}.Build()
	File_tour_tour_proto = out.File
	file_tour_tour_proto_rawDesc = nil
	file_tour_tour_proto_goTypes = nil
	file_tour_tour_proto_depIdxs = nil
}
